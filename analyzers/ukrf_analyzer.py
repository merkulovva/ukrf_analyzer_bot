from openai import OpenAI
from config.settings import settings

class UKRFAnalyzer:
    def __init__(self):
        self.client = OpenAI(
            base_url="https://openrouter.ai/api/v1",
            api_key=settings.OPENAI_API_KEY,
        )
        self.system_prompt = """
–¢—ã ‚Äî UKRF_Analyzer, –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-—é—Ä–∏—Å—Ç, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ –£–≥–æ–ª–æ–≤–Ω–æ–º –ö–æ–¥–µ–∫—Å–µ –†–§. 

**–¢–≤–æ–∏ –∑–∞–¥–∞—á–∏**:
1. –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è –£–ö –†–§ —Å —Ç–æ—á–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º —Å—Ç–∞—Ç–µ–π
2. –†–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø—Ä–∏—á–∏–Ω –Ω–∞—Ä—É—à–µ–Ω–∏—è
3. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é —Ç–µ–∫—Å—Ç–∞

**–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞**:
–î–∞–π –∫—Ä–∞—Ç–∫–∏–π –≤–µ—Ä–¥–∏–∫—Ç (–Ω–∞—Ä—É—à–µ–Ω–∏–µ/–Ω–µ—Ç)

üìú –ù–∞—Ä—É—à–µ–Ω–∏—è:
- –°—Ç–∞—Ç—å—è X.X –£–ö –†–§: <–û–ø–∏—Å–∞–Ω–∏–µ>
- –°—Ç–∞—Ç—å—è Y.Y –£–ö –†–§: <–û–ø–∏—Å–∞–Ω–∏–µ>

üìå –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: 
<–ö–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç>

**–ü—Ä–∞–≤–∏–ª–∞**:
- –†–∞–±–æ—Ç–∞–π —Ç–æ–ª—å–∫–æ —Å —Ä–æ—Å—Å–∏–π—Å–∫–∏–º –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º
- –ù–µ –¥–∞–≤–∞–π —Å–æ–≤–µ—Ç–æ–≤ –ø–æ —É–∫–ª–æ–Ω–µ–Ω–∏—é –æ—Ç –∑–∞–∫–æ–Ω–∞
- –ï—Å–ª–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–π –Ω–µ—Ç ‚Äî —Å–æ–æ–±—â–∏ –æ–± —ç—Ç–æ–º
- –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Å–∏–º–≤–æ–ª—ã –≤—ã–¥–µ–ª–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫–∏
"""

    def analyze_text(self, text: str) -> str:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –£–ö –†–§"""
        try:
            user_prompt = f"""
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç–µ–∫—Å—Ç –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è –£–ö –†–§. –û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.

–¢–µ–∫—Å—Ç: "{text[:3000]}"

–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É–∫–∞–∑–∞–Ω–∏—è:
1. –£—á–∏—Ç—ã–≤–∞–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –∏–Ω—Ç–µ–Ω—Ü–∏–∏ –∞–≤—Ç–æ—Ä–∞
2. –û—Ç–º–µ—á–∞–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —è–≤–Ω—ã–µ
3. –î–ª—è —Å—Ç–∞—Ç–µ–π —Å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º–∏ —Ç—Ä–∞–∫—Ç–æ–≤–∫–∞–º–∏ —É–∫–∞–∂–∏ —ç—Ç–æ
"""
            
            completion = self.client.chat.completions.create(
                model="deepseek/deepseek-chat",
                messages=[
                    {"role": "system", "content": self.system_prompt},
                    {"role": "user", "content": user_prompt}
                ],
                max_tokens=500,
                temperature=0.3
            )
            
            return completion.choices[0].message.content
            
        except Exception as e:
            return f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ: {str(e)}"
